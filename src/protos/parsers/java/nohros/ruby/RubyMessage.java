// Generated by the protocol buffer compiler.  DO NOT EDIT!

package nohros.ruby;

public final class RubyMessage {
  private RubyMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class RubyMessagePacket extends
      com.google.protobuf.GeneratedMessage {
    // Use RubyMessagePacket.newBuilder() to construct.
    private RubyMessagePacket() {}
    
    private static final RubyMessagePacket defaultInstance = new RubyMessagePacket();
    public static RubyMessagePacket getDefaultInstance() {
      return defaultInstance;
    }
    
    public RubyMessagePacket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nohros.ruby.RubyMessage.internal_static_nohros_ruby_RubyMessagePacket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nohros.ruby.RubyMessage.internal_static_nohros_ruby_RubyMessagePacket_fieldAccessorTable;
    }
    
    // optional string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }
    
    // optional string parser_type = 2;
    public static final int PARSER_TYPE_FIELD_NUMBER = 2;
    private boolean hasParserType;
    private java.lang.String parserType_ = "";
    public boolean hasParserType() { return hasParserType; }
    public java.lang.String getParserType() { return parserType_; }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasMessage()) {
        output.writeString(1, getMessage());
      }
      if (hasParserType()) {
        output.writeString(2, getParserType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMessage());
      }
      if (hasParserType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getParserType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static nohros.ruby.RubyMessage.RubyMessagePacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nohros.ruby.RubyMessage.RubyMessagePacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private nohros.ruby.RubyMessage.RubyMessagePacket result;
      
      // Construct using nohros.ruby.RubyMessage.RubyMessagePacket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new nohros.ruby.RubyMessage.RubyMessagePacket();
        return builder;
      }
      
      protected nohros.ruby.RubyMessage.RubyMessagePacket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new nohros.ruby.RubyMessage.RubyMessagePacket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nohros.ruby.RubyMessage.RubyMessagePacket.getDescriptor();
      }
      
      public nohros.ruby.RubyMessage.RubyMessagePacket getDefaultInstanceForType() {
        return nohros.ruby.RubyMessage.RubyMessagePacket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public nohros.ruby.RubyMessage.RubyMessagePacket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private nohros.ruby.RubyMessage.RubyMessagePacket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public nohros.ruby.RubyMessage.RubyMessagePacket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        nohros.ruby.RubyMessage.RubyMessagePacket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nohros.ruby.RubyMessage.RubyMessagePacket) {
          return mergeFrom((nohros.ruby.RubyMessage.RubyMessagePacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(nohros.ruby.RubyMessage.RubyMessagePacket other) {
        if (other == nohros.ruby.RubyMessage.RubyMessagePacket.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasParserType()) {
          setParserType(other.getParserType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setMessage(input.readString());
              break;
            }
            case 18: {
              setParserType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string message = 1;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // optional string parser_type = 2;
      public boolean hasParserType() {
        return result.hasParserType();
      }
      public java.lang.String getParserType() {
        return result.getParserType();
      }
      public Builder setParserType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasParserType = true;
        result.parserType_ = value;
        return this;
      }
      public Builder clearParserType() {
        result.hasParserType = false;
        result.parserType_ = getDefaultInstance().getParserType();
        return this;
      }
    }
    
    static {
      nohros.ruby.RubyMessage.getDescriptor();
    }
    
    static {
      nohros.ruby.RubyMessage.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_nohros_ruby_RubyMessagePacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nohros_ruby_RubyMessagePacket_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ruby_message.proto\022\013nohros.ruby\032$googl" +
      "e/protobuf/csharp_options.proto\"9\n\021RubyM" +
      "essagePacket\022\017\n\007message\030\001 \001(\t\022\023\n\013parser_" +
      "type\030\002 \001(\tB(H\001\302>\r\n\013Nohros.Ruby\302>\023\022\021RubyM" +
      "essageProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_nohros_ruby_RubyMessagePacket_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_nohros_ruby_RubyMessagePacket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_nohros_ruby_RubyMessagePacket_descriptor,
              new java.lang.String[] { "Message", "ParserType", },
              nohros.ruby.RubyMessage.RubyMessagePacket.class,
              nohros.ruby.RubyMessage.RubyMessagePacket.Builder.class);
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registerAllExtensions(registry);
          google.protobuf.CsharpOptions.registerAllExtensions(registry);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          google.protobuf.CsharpOptions.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
